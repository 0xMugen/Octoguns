
// Generated by dojo-bindgen on Mon, 26 Aug 2024 16:46:12 +0000. Do not modify this file manually.
// Import the necessary types from the recs SDK
// generate again with `sozo build --typescript` 
import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;



// Type definition for `dojo::model::layout::Layout` enum
export type Layout = { type: 'Fixed'; value: RecsType.NumberArray; } | { type: 'Struct'; value: RecsType.StringArray; } | { type: 'Tuple'; value: RecsType.StringArray; } | { type: 'Array'; value: RecsType.StringArray; } | { type: 'ByteArray'; } | { type: 'Enum'; value: RecsType.StringArray; };

export const LayoutDefinition = {
    type: RecsType.String,
    value: RecsType.String
};
        
// Type definition for `dojo::model::layout::FieldLayout` struct
export interface FieldLayout {
    selector: BigInt;
    layout: Layout;
    
}
export const FieldLayoutDefinition = {
    selector: RecsType.BigInt,
    layout: LayoutDefinition,
    
};

// Type definition for `octoguns::models::character::Health` struct
export interface Health {
    entity_id: Number;
    health: Number;
    
}
export const HealthDefinition = {
    entity_id: RecsType.Number,
    health: RecsType.Number,
    
};

// Type definition for `core::byte_array::ByteArray` struct
export interface ByteArray {
    data: String[];
    pending_word: BigInt;
    pending_word_len: Number;
    
}
export const ByteArrayDefinition = {
    data: RecsType.StringArray,
    pending_word: RecsType.BigInt,
    pending_word_len: RecsType.Number,
    
};


// Type definition for `octoguns::types::Vec2` struct
export interface Vec2 {
    x: Number;
    y: Number;
    
}
export const Vec2Definition = {
    x: RecsType.Number,
    y: RecsType.Number,
    
};

// Type definition for `octoguns::models::map::MapObjects` struct
export interface MapObjects {
    map_object_id: Number;
    dimensions: Vec2;
    coords: Vec2;
    
}
export const MapObjectsDefinition = {
    map_object_id: RecsType.Number,
    dimensions: Vec2Definition,
    coords: Vec2Definition,
    
};


// Type definition for `octoguns::models::character::Character` struct
export interface Character {
    entity_id: Number;
    session_id: Number;
    player_id: BigInt;
    steps_amount: Number;
    
}
export const CharacterDefinition = {
    entity_id: RecsType.Number,
    session_id: RecsType.Number,
    player_id: RecsType.BigInt,
    steps_amount: RecsType.Number,
    
};


// Type definition for `octoguns::models::character::Position` struct
export interface Position {
    entity_id: Number;
    x: Number;
    y: Number;
    
}
export const PositionDefinition = {
    entity_id: RecsType.Number,
    x: RecsType.Number,
    y: RecsType.Number,
    
};


// Type definition for `octoguns::models::global::Global` struct
export interface Global {
    id: Number;
    pending_sessions: Number[];
    
}
export const GlobalDefinition = {
    id: RecsType.Number,
    pending_sessions: RecsType.NumberArray,
    
};


// Type definition for `octoguns::models::map::Map` struct
export interface Map {
    map_id: Number;
    map_objects_id: Number[];
    
}
export const MapDefinition = {
    map_id: RecsType.Number,
    map_objects_id: RecsType.NumberArray,
    
};


// Type definition for `octoguns::models::bullet::Bullet` struct
export interface Bullet {
    bullet_id: Number;
    coords: Vec2;
    speed: Number;
    direction: Number;
    
}
export const BulletDefinition = {
    bullet_id: RecsType.Number,
    coords: Vec2Definition,
    speed: RecsType.Number,
    direction: RecsType.Number,
    
};


// Type definition for `octoguns::models::sessions::SessionMeta` struct
export interface SessionMeta {
    session_id: Number;
    turn_count: Number;
    bullets: Number[];
    characters: Number[];
    
}
export const SessionMetaDefinition = {
    session_id: RecsType.Number,
    turn_count: RecsType.Number,
    bullets: RecsType.NumberArray,
    characters: RecsType.NumberArray,
    
};


// Type definition for `octoguns::models::sessions::Session` struct
export interface Session {
    session_id: Number;
    player1: BigInt;
    player2: BigInt;
    map_id: Number;
    state: Number;
    
}
export const SessionDefinition = {
    session_id: RecsType.Number,
    player1: RecsType.BigInt,
    player2: RecsType.BigInt,
    map_id: RecsType.Number,
    state: RecsType.Number,
    
};


export function defineContractComponents(world: World) {
    return {

        // Model definition for `octoguns::models::character::Health` model
        Health: (() => {
            return defineComponent(
                world,
                {
                    entity_id: RecsType.Number,
                    health: RecsType.Number,
                },
                {
                    metadata: {
                        namespace: "octoguns",
                        name: "Health",
                        types: ["u32", "u8"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `octoguns::models::map::MapObjects` model
        MapObjects: (() => {
            return defineComponent(
                world,
                {
                    map_object_id: RecsType.Number,
                    dimensions: Vec2Definition,
                    coords: Vec2Definition,
                },
                {
                    metadata: {
                        namespace: "octoguns",
                        name: "MapObjects",
                        types: ["u32"],
                        customTypes: ["Vec2", "Vec2"],
                    },
                }
            );
        })(),

        // Model definition for `octoguns::models::character::Character` model
        Character: (() => {
            return defineComponent(
                world,
                {
                    entity_id: RecsType.Number,
                    session_id: RecsType.Number,
                    player_id: RecsType.BigInt,
                    steps_amount: RecsType.Number,
                },
                {
                    metadata: {
                        namespace: "octoguns",
                        name: "Character",
                        types: ["u32", "u32", "ContractAddress", "u32"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `octoguns::models::character::Position` model
        Position: (() => {
            return defineComponent(
                world,
                {
                    entity_id: RecsType.Number,
                    x: RecsType.Number,
                    y: RecsType.Number,
                },
                {
                    metadata: {
                        namespace: "octoguns",
                        name: "Position",
                        types: ["u32", "i64", "i64"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `octoguns::models::global::Global` model
        Global: (() => {
            return defineComponent(
                world,
                {
                    id: RecsType.Number,
                    pending_sessions: RecsType.NumberArray,
                },
                {
                    metadata: {
                        namespace: "octoguns",
                        name: "Global",
                        types: ["u32", "array"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `octoguns::models::map::Map` model
        Map: (() => {
            return defineComponent(
                world,
                {
                    map_id: RecsType.Number,
                    map_objects_id: RecsType.NumberArray,
                },
                {
                    metadata: {
                        namespace: "octoguns",
                        name: "Map",
                        types: ["u32", "array"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `octoguns::models::bullet::Bullet` model
        Bullet: (() => {
            return defineComponent(
                world,
                {
                    bullet_id: RecsType.Number,
                    coords: Vec2Definition,
                    speed: RecsType.Number,
                    direction: RecsType.Number,
                },
                {
                    metadata: {
                        namespace: "octoguns",
                        name: "Bullet",
                        types: ["u32", "i64", "i64"],
                        customTypes: ["Vec2"],
                    },
                }
            );
        })(),

        // Model definition for `octoguns::models::sessions::SessionMeta` model
        SessionMeta: (() => {
            return defineComponent(
                world,
                {
                    session_id: RecsType.Number,
                    turn_count: RecsType.Number,
                    bullets: RecsType.NumberArray,
                    characters: RecsType.NumberArray,
                },
                {
                    metadata: {
                        namespace: "octoguns",
                        name: "SessionMeta",
                        types: ["u32", "u32", "array", "array"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `octoguns::models::sessions::Session` model
        Session: (() => {
            return defineComponent(
                world,
                {
                    session_id: RecsType.Number,
                    player1: RecsType.BigInt,
                    player2: RecsType.BigInt,
                    map_id: RecsType.Number,
                    state: RecsType.Number,
                },
                {
                    metadata: {
                        namespace: "octoguns",
                        name: "Session",
                        types: ["u32", "ContractAddress", "ContractAddress", "u32", "u8"],
                        customTypes: [],
                    },
                }
            );
        })(),
    };
}
