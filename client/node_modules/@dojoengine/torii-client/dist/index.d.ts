import { ComparisonOperator, ValueType } from '@dojoengine/torii-wasm';
export * from '@dojoengine/torii-wasm';

interface NumberFilter {
    eq?: number;
    neq?: number;
    gt?: number;
    gte?: number;
    lt?: number;
    lte?: number;
}
type ConvertNumberToFilter<T extends object> = {
    [K in keyof T]: T[K] extends number ? NumberFilter | number : T[K];
};
type ModelClause<T extends object> = {
    OR?: ModelClause<T>[];
    AND?: ModelClause<T>[];
} & Partial<ConvertNumberToFilter<T>>;
declare function valueToToriiValueAndOperator(value: NumberFilter | number | bigint | string | boolean): {
    operator: ComparisonOperator;
    value: {
        primitive_type: {
            Felt252: "";
        };
        value_type: ValueType;
    };
};

export { type ModelClause, valueToToriiValueAndOperator };
